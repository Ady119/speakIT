@use "sass:math";

$grid-columns:12;
$grid-gaps: (
    "0": 0,
    "1": 10px,
    "2": 20px,
    "3": 30px,
);

$layout-values: flex-start, flex-end, center, space-between, space-around;

//base layout classes

.container, .inner-container {
    margin-left: auto;
    margin-right: auto;
    box-sizing: border-box;
    display: grid;
    @each $breakpoint, $maxWidth in $container-max-widths {
        @include breakpoint(map-get($breakpoints, $breakpoint)) {
            max-width: $maxWidth;
            margin-top: map-get($container-margins, $breakpoint);
            margin-bottom: map-get($container-margins, $breakpoint);
        }
    }
}


.full-w-container {
    width: 100%;
    background-color: #47abda;
    margin-right: auto;
    margin-left: auto;
    padding: 20px 0;

}

.row {
    display: flex;
    flex-flow: wrap;
    justify-content: flex-start;
}
// .row::after {
//     content: '';
//     flex: auto;
// }
//grid gaps
// Grid gaps
@each $key, $val in $grid-gaps {
    .gap-#{$key} {
        gap: $val; // Apply the gap between items
    }
}


//justify content classes
@each $val in $layout-values {
    .justify-#{$val} {
        justify-content: $val;
    }
}

//col classes 
@include xs {
    @for $i from 1 through $grid-columns {
        .col-#{$i}-xs {
            box-sizing: border-box;
            // flex-grow: 0;
            width: math.div($i * 100%, $grid-columns);
        }
    }
}

@include sm {
    @for $i from 1 through $grid-columns {
        .col-#{$i}-sm {
            box-sizing: border-box;
            // flex-grow: 0;
            width: math.div($i * 100%, $grid-columns);
        }
    }
}

@include md {
    @for $i from 1 through $grid-columns {
        .col-#{$i}-md {
            box-sizing: border-box;
            // flex-grow: 0;
            width: math.div($i * 100%, $grid-columns);
        }
    }
}

@include lg {
    @for $i from 1 through $grid-columns {
        .col-#{$i}-lg {
            box-sizing: border-box;
            // flex-grow: 0;
            width: math.div($i * 100%, $grid-columns);
        }
    }
}

@include xl {
    @for $i from 1 through $grid-columns {
        .col-#{$i}-xl {
            box-sizing: border-box;
            flex-grow: 0;
            width: math.div($i * 100%, $grid-columns);
        }
    }
}